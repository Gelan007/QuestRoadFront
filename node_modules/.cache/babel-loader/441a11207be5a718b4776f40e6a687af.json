{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mila\\\\Desktop\\\\react-test-app\\\\src\\\\components\\\\Post\\\\AllPost.jsx\";\nimport React from \"react\";\nimport Posts from \"./Posts\";\nimport s from \"./Posts.module.css\";\nimport img1 from \"./img1.png\";\nimport img2 from \"./img2.png\";\nimport img3 from \"./img3.png\";\nimport App from \"../../App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PostItem = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.col_4,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: s.img1,\n        src: img1,\n        alt: \"cut1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.textcard,\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: s.h4_cut,\n        children: props.texthead\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        className: s.h6text,\n        children: props.textmain\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.row,\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          className: s.date,\n          children: props.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: s.read,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            children: \"Read more\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n\n_c = PostItem;\n\nconst AllPosts = props => {\n  let onPostChange = () => {};\n\n  let postsElement = props.state.postsData.map(item => /*#__PURE__*/_jsxDEV(PostItem, {\n    texthead: item.texthead,\n    textmain: item.textmain\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 58\n  }, this)); //Выводит массив данных с постс дата поочереди и потом мы только его вызываем в скобках\n\n  let newPostElement = /*#__PURE__*/React.createRef(); //создаем ссылку\n\n  let addpost = () => {\n    let text = newPostElement.current.value;\n    props.addpost(text);\n    newPostElement.current.value = '';\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        onChange: onPostChange,\n        ref: newPostElement,\n        value: props.newPostText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: s.btn_onclick,\n        onClick: addpost,\n        children: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 103\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.blog,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: s.blogh1,\n        children: \"\\u0411\\u043B\\u043E\\u0433\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.container,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.row,\n          children: postsElement\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.row,\n          children: postsElement\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.row,\n          children: postsElement\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 101\n    }, this)]\n  }, void 0, true);\n};\n\n_c2 = AllPosts;\nexport default AllPosts;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PostItem\");\n$RefreshReg$(_c2, \"AllPosts\");","map":{"version":3,"sources":["C:/Users/Mila/Desktop/react-test-app/src/components/Post/AllPost.jsx"],"names":["React","Posts","s","img1","img2","img3","App","PostItem","props","col_4","textcard","h4_cut","texthead","h6text","textmain","row","date","read","AllPosts","onPostChange","postsElement","state","postsData","map","item","newPostElement","createRef","addpost","text","current","value","newPostText","btn_onclick","blog","blogh1","container"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Posts from \"./Posts\";\r\nimport s from \"./Posts.module.css\";\r\nimport img1 from \"./img1.png\";\r\nimport img2 from \"./img2.png\";\r\nimport img3 from \"./img3.png\";\r\nimport App from \"../../App\";\r\nconst PostItem = (props) => {\r\n  \r\n    return (\r\n        <div className={s.col_4} >\r\n            <div>\r\n                <img className={s.img1} src={img1} alt=\"cut1\"></img>\r\n            </div>\r\n            <div className={s.textcard}>\r\n                <h4 className={s.h4_cut}>{props.texthead}</h4>\r\n                <h6 className={s.h6text}>{props.textmain}</h6>\r\n                <div className={s.row}>\r\n                    <h6 className={s.date}>{props.date}</h6>\r\n                    <h5 className={s.read}><a href=\"#\">Read more</a></h5>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst AllPosts = (props) => {\r\n    let onPostChange = () => {\r\n\r\n    }\r\n    let postsElement = props.state.postsData.map(item => <PostItem texthead={item.texthead} textmain={item.textmain} />);\r\n    //Выводит массив данных с постс дата поочереди и потом мы только его вызываем в скобках\r\n\r\n\r\n    let newPostElement = React.createRef();//создаем ссылку\r\n\r\n    let addpost = () => {\r\n        let text = newPostElement.current.value;\r\n        props.addpost(text);\r\n        newPostElement.current.value = '';\r\n\r\n    }\r\n\r\n    \r\n    return (\r\n        <><div>\r\n            <textarea onChange={onPostChange} ref={newPostElement} value={props.newPostText} /> </div><div>\r\n                <button type=\"button\" className={s.btn_onclick} onClick={addpost}>add</button></div><div className={s.blog}>\r\n                <h1 className={s.blogh1}>Блог</h1>\r\n                <div className={s.container}>\r\n                    <div className={s.row}>\r\n                        {postsElement}\r\n                    </div>\r\n                    <div className={s.row}>\r\n                        {postsElement}\r\n                    </div>\r\n                    <div className={s.row}>\r\n                        {postsElement}\r\n                    </div>\r\n                </div>\r\n            </div></>\r\n    );\r\n}\r\n\r\nexport default AllPosts;"]},"metadata":{},"sourceType":"module"}