{"ast":null,"code":"var _jsxFileName = \"D:\\\\YotorMain\\\\src\\\\components\\\\Cars\\\\Cars.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport Booking from \"../OnlineBooking/Booking\";\nimport { useHistory } from 'react-router-dom'; // import { Table } from 'reactstrap';\n\nimport Button from '@material-ui/core/Button';\nimport { AppBar, Container, Toolbar, IconButton, Typography, Paper, Box, Grid, Card, CardMedia, CardContent, CardActions } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  title: {\n    flexGrow: 1\n  },\n  mainFeaturePost: {\n    position: \"relative\",\n    color: theme.palette.common.white,\n    marginBottom: theme.spacing(4),\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundPosition: \"center\"\n  },\n  mainFeaturePostContent: {\n    position: \"relative\",\n    padding: theme.spacing(3)\n  },\n  cardMedia: {\n    paddingTop: \"56.25%\"\n  },\n  cardContent: {\n    flexGrow: 1\n  },\n  cardGrid: {\n    marginTop: theme.spacing(4)\n  }\n}));\nexport default function Cars(props) {\n  _s();\n\n  const [carId, setCarId] = useState();\n  const [checkIfUserClickAgain, setCheckIfUserClickAgain] = useState(false);\n\n  async function getCars(e) {\n    //e.preventDefault();\n    let res = await fetch(\"https://localhost:44312/api/Car\", {\n      method: 'GET',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\",\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"tok\")\n      }\n    });\n    res = await res.json(); // Установка в localStorage всех данных о машине в формате массива\n\n    let names = [];\n\n    for (var i in res) {\n      names[i] = res[i];\n    }\n\n    localStorage.setItem(\"cars\", JSON.stringify(names));\n    console.log(localStorage.getItem(\"cars\"));\n  }\n\n  getCars();\n  var items = JSON.parse(localStorage.getItem(\"cars\"));\n  const classes = useStyles();\n  const cards = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n  /*  function setStateCarId(e){\r\n        if((carId < 0 || carId == null) && !checkIfUserClickAgain){\r\n            setCarId(e);\r\n            setCheckIfUserClickAgain(true);\r\n            localStorage.setItem(\"carId\", e);\r\n            console.log(carId);\r\n            console.log(localStorage.getItem(\"carId\"));\r\n        }\r\n      }*/\n\n  function setStateCarId(id) {\n    localStorage.setItem(\"carId\", id);\n    console.log(localStorage.getItem(\"carId\"));\n  }\n\n  function setStateCheck() {\n    setCheckIfUserClickAgain(false);\n  }\n\n  function twoFunc(e) {\n    setStateCarId(e);\n    setStateCheck();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.mainFeaturePost,\n      style: {\n        backgroundImage: \"url('https://source.unsplash.com/random')\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        fixed: true,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.mainFeaturePostContent,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                component: \"h1\",\n                variant: \"h3\",\n                color: \"inherit\",\n                gutterBottom: true,\n                children: \"Web Blog\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                component: \"h5\",\n                color: \"inherit\",\n                paragraph: true,\n                children: \"Web Blogdsadanas adsadsadasjhdjkasdjas sadjasjdjasdnjasdasjldna asljdnajdnsajdnjad. sadkaslkdaskld.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"h5\",\n                color: \"second\",\n                children: \"learm more\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.mainContent,\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"md\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h2\",\n          align: \"center\",\n          color: \"textPrimary\",\n          gutterBottom: true,\n          children: \"Yotor service\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          align: \"center\",\n          color: \"textSecondary\",\n          paragraph: true,\n          children: \"dksfkdsfksdflsdfds dkfsdkfskdmfkldsfm sdpkfmdkslfmksdmflskdmflsdmflsdfm dspkfmsdkfmsk;dfm;ksdf\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          justify: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              children: \"Start Now\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: classes.cardGrid,\n      maxWidth: \"md\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 4,\n        children: JSON.parse(localStorage.getItem(\"cars\")).map(card => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: classes.card,\n            children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n              className: classes.cardMedia,\n              image: \"https://source.unsplash.com/random\",\n              title: \"image title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              className: classes.cardContent,\n              children: [/*#__PURE__*/_jsxDEV(NavLink, {\n                to: \"/detailedCar\",\n                onClick: () => setStateCarId(card.car_id),\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h5\",\n                  gutterBottom: true,\n                  children: card.model\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                children: [\"\\u0413\\u043E\\u0434: \", card.year, \",\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 58\n                }, this), \"\\u0426\\u0435\\u043D\\u0430: \", card.price, \", \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 61\n                }, this), \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435: \", card.description]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                size: \"small\",\n                color: \"primary\",\n                children: \"View\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                size: \"small\",\n                color: \"primary\",\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 29\n          }, this)\n        }, card, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n} //------------------\n// export default function Cars(props) {\n//     const history = useHistory();\n//     const [cars, setCars] = useState([]);\n//     async function getCars(e){\n//         let res = await fetch(\"https://localhost:44312/api/Car\", {\n//             method: 'GET',\n//             headers: {\n//                 \"Content-Type\": \"application/json\",\n//                 \"Accept\": \"application/json\",\n//                 \"Authorization\": \"Bearer \"+ localStorage.getItem(\"tok\"),\n//             },\n//         });\n//         setCars();\n//         console.log(cars);\n//         console.log(res);\n//         console.log(res.status);\n//         if(res.status === 200){\n//             //history.push(\"/login\")\n//         }\n//         res = await res.json();\n//         localStorage.setItem(\"cars\", JSON.stringify(res));\n//     } \n//     return (\n//         <table>\n//            <thead>\n//                 <tr>\n//                    <th>Model</th>\n//                     <th>Brand</th>\n//                     <th>Year</th>\n//                     <th>Transmission</th>\n//                     <th>Address</th>\n//                     <th>Type</th>\n//                     <th>Price</th>\n//                     <th>Description</th>\n//                 </tr>\n//             </thead>\n//             <tbody>\n//                 { JSON.parse(localStorage.getItem(\"cars\")).map(item => { \n//                     return (\n//                         <tr>  \n//                             <td>{item.model}</td>\n//                             <td>{item.brand}</td>\n//                             <td>{item.year}</td>\n//                             <td>{item.transmission}</td>\n//                             <td>{item.address}</td>\n//                             <td>{item.type}</td>\n//                             <td>{item.price}</td>\n//                             <td>{item.description}</td>\n//                         </tr>\n//                     );\n//                 })}\n//             </tbody>\n//         </table>\n//     );\n// };\n\n_s(Cars, \"TKThUTYj1cJ0fYL+cqSuWxTPwoM=\", false, function () {\n  return [useStyles];\n});\n\n_c = Cars;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cars\");","map":{"version":3,"sources":["D:/YotorMain/src/components/Cars/Cars.jsx"],"names":["React","useEffect","useState","NavLink","Booking","useHistory","Button","AppBar","Container","Toolbar","IconButton","Typography","Paper","Box","Grid","Card","CardMedia","CardContent","CardActions","makeStyles","useStyles","theme","title","flexGrow","mainFeaturePost","position","color","palette","common","white","marginBottom","spacing","backgroundSize","backgroundRepeat","backgroundPosition","mainFeaturePostContent","padding","cardMedia","paddingTop","cardContent","cardGrid","marginTop","Cars","props","carId","setCarId","checkIfUserClickAgain","setCheckIfUserClickAgain","getCars","e","res","fetch","method","headers","localStorage","getItem","json","names","i","setItem","JSON","stringify","console","log","items","parse","classes","cards","setStateCarId","id","setStateCheck","twoFunc","backgroundImage","mainContent","map","card","car_id","model","year","price","description"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport Booking from \"../OnlineBooking/Booking\";\r\nimport { useHistory } from 'react-router-dom';\r\n// import { Table } from 'reactstrap';\r\nimport Button from '@material-ui/core/Button';\r\nimport {AppBar, Container, Toolbar, IconButton, Typography, Paper, Box, Grid, Card, CardMedia, CardContent, CardActions} from '@material-ui/core';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        flexGrow: 1\r\n    },\r\n    mainFeaturePost:{\r\n      position: \"relative\",\r\n      color: theme.palette.common.white,\r\n      marginBottom: theme.spacing(4),\r\n\r\n      backgroundSize: \"cover\",\r\n      backgroundRepeat: \"no-repeat\",\r\n      backgroundPosition: \"center\"\r\n    },\r\n    mainFeaturePostContent:{\r\n      position: \"relative\",\r\n      padding: theme.spacing(3)\r\n    },\r\n    cardMedia:{\r\n        paddingTop:\"56.25%\"\r\n    },\r\n    cardContent: {\r\n        flexGrow: 1\r\n    },\r\n    cardGrid:{\r\n        marginTop: theme.spacing(4)\r\n    }\r\n}))\r\n\r\nexport default function Cars(props) {\r\n    const [carId, setCarId] = useState();\r\n    const [checkIfUserClickAgain, setCheckIfUserClickAgain] = useState(false);\r\n    async function getCars(e){\r\n        //e.preventDefault();\r\n        let res = await fetch(\"https://localhost:44312/api/Car\", {\r\n            method: 'GET',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/json\",\r\n                \"Authorization\": \"Bearer \"+ localStorage.getItem(\"tok\"),\r\n            },\r\n        });\r\n        res = await res.json();\r\n        // Установка в localStorage всех данных о машине в формате массива\r\n        let names = [];\r\n        for(var i in res ){\r\n            names[i] = res[i];\r\n        }\r\n        localStorage.setItem(\"cars\", JSON.stringify(names));\r\n        console.log(localStorage.getItem(\"cars\"));\r\n    }\r\n    getCars();\r\n    var items = JSON.parse(localStorage.getItem(\"cars\"));\r\n    const classes = useStyles();\r\n    const cards = [1,2,3,4,5,6,7,8,9];\r\n\r\n\r\n  /*  function setStateCarId(e){\r\n        if((carId < 0 || carId == null) && !checkIfUserClickAgain){\r\n            setCarId(e);\r\n            setCheckIfUserClickAgain(true);\r\n            localStorage.setItem(\"carId\", e);\r\n            console.log(carId);\r\n            console.log(localStorage.getItem(\"carId\"));\r\n        }\r\n\r\n    }*/\r\n    function setStateCarId(id){\r\n        localStorage.setItem(\"carId\", id);\r\n        console.log(localStorage.getItem(\"carId\"));\r\n    }\r\n    function setStateCheck(){\r\n        setCheckIfUserClickAgain(false);\r\n    }\r\n    function twoFunc(e){\r\n        setStateCarId(e);\r\n        setStateCheck();\r\n    }\r\n\r\n    return (\r\n    \r\n        <main>\r\n            <Paper className={classes.mainFeaturePost}\r\n            style={{backgroundImage: \"url('https://source.unsplash.com/random')\"}}>\r\n                <Container fixed>\r\n                    <Grid container>\r\n                        <Grid item md={6}>\r\n                            <div className={classes.mainFeaturePostContent}>\r\n                            <Typography component=\"h1\" variant=\"h3\" color=\"inherit\" gutterBottom>\r\n                             Web Blog\r\n                            </Typography>\r\n                                <Typography component=\"h5\" color=\"inherit\" paragraph>\r\n                                    Web Blogdsadanas\r\n                                    adsadsadasjhdjkasdjas\r\n                                    sadjasjdjasdnjasdasjldna\r\n                                    asljdnajdnsajdnjad. sadkaslkdaskld.\r\n                                </Typography>\r\n                                <Button variant =\"h5\" color=\"second\">\r\n                                    learm more\r\n                                </Button>\r\n                            </div>\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n\r\n                </Container>\r\n            </Paper>\r\n\r\n            <div className={classes.mainContent}>\r\n                <Container maxWidth=\"md\">\r\n                    <Typography variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>Yotor service</Typography>\r\n                    <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>dksfkdsfksdflsdfds\r\n                    dkfsdkfskdmfkldsfm\r\n                    sdpkfmdkslfmksdmflskdmflsdmflsdfm\r\n                    dspkfmsdkfmsk;dfm;ksdf</Typography>\r\n                    <Grid container spacing={2} justify=\"center\">\r\n                        <Grid item>\r\n                            <Button variant=\"contained\" color=\"primary\">Start Now</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                </Container>\r\n            </div>\r\n            <Container className={classes.cardGrid} maxWidth=\"md\">\r\n                <Grid container spacing={4}>\r\n                    {JSON.parse(localStorage.getItem(\"cars\")).map((card) => (\r\n                        <Grid item key={card} xs={12} sm={6} md={4}>\r\n                            <Card className={classes.card}>\r\n                                <CardMedia\r\n                                className={classes.cardMedia}\r\n                                image=\"https://source.unsplash.com/random\"\r\n                                title=\"image title\"/>\r\n                                <CardContent className={classes.cardContent}>\r\n                                    <NavLink to=\"/detailedCar\" onClick={ () => setStateCarId(card.car_id)}>\r\n                                    <Typography variant=\"h5\" gutterBottom>\r\n                                        {card.model}\r\n                                    </Typography>\r\n                                    </NavLink>\r\n                                    <Typography>\r\n                                        Год: {card.year},<br/>\r\n                                        Цена: {card.price}, <br/>\r\n                                        Описание: {card.description}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                                <CardActions>\r\n                                    <Button size=\"small\" color=\"primary\">\r\n                                        View\r\n                                    </Button>\r\n                                    <Button size=\"small\" color=\"primary\">\r\n                                        Edit\r\n                                    </Button>\r\n                                </CardActions>\r\n                            </Card>\r\n                        </Grid>\r\n\r\n                    ))}\r\n                </Grid>\r\n            </Container>\r\n        </main>\r\n    )\r\n    \r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//------------------\r\n\r\n// export default function Cars(props) {\r\n//     const history = useHistory();\r\n//     const [cars, setCars] = useState([]);\r\n\r\n//     async function getCars(e){\r\n       \r\n\r\n//         let res = await fetch(\"https://localhost:44312/api/Car\", {\r\n//             method: 'GET',\r\n//             headers: {\r\n//                 \"Content-Type\": \"application/json\",\r\n//                 \"Accept\": \"application/json\",\r\n//                 \"Authorization\": \"Bearer \"+ localStorage.getItem(\"tok\"),\r\n//             },\r\n//         });\r\n//         setCars();\r\n//         console.log(cars);\r\n//         console.log(res);\r\n//         console.log(res.status);\r\n//         if(res.status === 200){\r\n//             //history.push(\"/login\")\r\n//         }\r\n//         res = await res.json();\r\n//         localStorage.setItem(\"cars\", JSON.stringify(res));\r\n//     } \r\n//     return (\r\n        \r\n         \r\n//         <table>\r\n//            <thead>\r\n//                 <tr>\r\n//                    <th>Model</th>\r\n//                     <th>Brand</th>\r\n//                     <th>Year</th>\r\n//                     <th>Transmission</th>\r\n//                     <th>Address</th>\r\n//                     <th>Type</th>\r\n//                     <th>Price</th>\r\n//                     <th>Description</th>\r\n//                 </tr>\r\n//             </thead>\r\n//             <tbody>\r\n        \r\n//                 { JSON.parse(localStorage.getItem(\"cars\")).map(item => { \r\n//                     return (\r\n\r\n//                         <tr>  \r\n//                             <td>{item.model}</td>\r\n//                             <td>{item.brand}</td>\r\n//                             <td>{item.year}</td>\r\n//                             <td>{item.transmission}</td>\r\n//                             <td>{item.address}</td>\r\n//                             <td>{item.type}</td>\r\n//                             <td>{item.price}</td>\r\n//                             <td>{item.description}</td>\r\n//                         </tr>\r\n//                     );\r\n//                 })}\r\n\r\n//             </tbody>\r\n//         </table>\r\n        \r\n        \r\n//     );\r\n// };\r\n"]},"metadata":{},"sourceType":"module"}